version: '3' # this specifies the docker-compose version

services:
  mongo:
    # Build the Dockerfile in the root of the mongo/ folder
    build: mongo
    image: get_fit_mongo:${DOCKER_TAG:-latest}
    container_name: get_fit_mongo
    command: --bind_ip_all
    # Expose the default mongoDB port. In contrast to the
    # docker-compose.test.yml, here we use the more traditional "ports"
    # configuration. This means that this port is exposed to our local machine,
    # not just the other docker-compose services. This SO post explains it well:
    # https://stackoverflow.com/questions/40801772/what-is-the-difference-between-docker-compose-ports-vs-expose
    expose:
      - 27017
    env_file:
      - unsecure.env
    # Pass in environment variables specified by the Travis build environment
    environment:
      - GETFIT_EMAIL_AMELIA
      - GETFIT_EMAIL_SAM
      - GETFIT_FITNESS_GOAL_AMELIA
      - GETFIT_FITNESS_GOAL_SAM
      - GETFIT_HASHED_PASS_AMELIA
      - GETFIT_HASHED_PASS_SAM
      - GETFIT_MFP_NAME_AMELIA
      - GETFIT_MFP_NAME_SAM

  # Start backend Express.js server
  node:
    build: .
    image: samhinshaw/get_fit:${DOCKER_TAG:-latest}
    container_name: get_fit_node
    env_file:
      - unsecure.env
    # Set the NODE_ENV to the dev environment
    # Pass in environment variables specified by the Travis build environment
    environment:
      - NODE_ENV=test
      - GOOGLE_CLIENT_EMAIL
      - GOOGLE_CLIENT_ID
      - GOOGLE_CLIENT_X509_CERT_URL
      - GOOGLE_PRIVATE_KEY
      - GOOGLE_PRIVATE_KEY_ID
      - GOOGLE_PROJECT_ID
      - NODEJS_REGISTRATION_SECRET
      - NODEJS_SESSION_SECRET
      - NODEJS_ZOHO_PASS
      - MFP_PASS_AMELIAHO
      - MFP_PASS_JETKNIFE
      - IFTTT_TOKEN_SAM
      - IFTTT_TOKEN_AMELIA
    command: ['yarn', 'run:prod']
    expose:
      - 8005
    depends_on:
      - mongo

  jasmine:
    image: samhinshaw/get_fit:${DOCKER_TAG:-latest}
    container_name: get_fit_jasmine
    # bring in unsecure variables
    env_file:
      - unsecure.env
    # Set the NODE_ENV to the test environment
    environment:
      - NODE_ENV=test
    command: ['yarn', 'test']
    depends_on:
      - node
